% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/DocumentationDensityDistributionQuantileSimulation.R
\name{dphasetype}
\alias{dphasetype}
\alias{dphasetype.discphasetype}
\alias{dphasetype.contphasetype}
\alias{pphasetype}
\alias{pphasetype.discphasetype}
\alias{pphasetype.contphasetype}
\alias{qphasetype}
\alias{qphasetype.discphasetype}
\alias{qphasetype.contphasetype}
\alias{rphasetype}
\alias{rphasetype.discphasetype}
\alias{rphasetype.contphasetype}
\title{The phase-type distribution}
\source{
Mogens Bladt and Bo Friis Nielsen (2017):
\emph{ Matrix-Exponential Distributions in Applied Probability}.
Probability Theory and Stochastic Modelling (Springer), Volume 81.
}
\usage{
dphasetype(...)

\method{dphasetype}{discphasetype}(object, x)

\method{dphasetype}{contphasetype}(object, x)

pphasetype(...)

\method{pphasetype}{discphasetype}(object, x)

\method{pphasetype}{contphasetype}(object, x)

qphasetype(...)

\method{qphasetype}{discphasetype}(object, p)

\method{qphasetype}{contphasetype}(object, p)

rphasetype(...)

\method{rphasetype}{discphasetype}(object, n)

\method{rphasetype}{contphasetype}(object, n)
}
\arguments{
\item{object}{an object for which the density, distribution function,
quantile function or random generation should be computed. To be able to use
these function,the object has to be of
class \code{discphasetype} or \code{contphasetype}.}

\item{x}{a positive quantile}

\item{p}{a probability}

\item{n}{number of observations}
}
\value{
\code{dphasetype} gives the density, \code{pphasetype}
gives the distribution function, \code{qphasetype} gives the quantile
function, and \code{rphasetype} simulates from the distribution.
The length of the output is 1, except for \code{rphasetype}, which produces
an output of length \eqn{n}.
}
\description{
Density, distribution function, quantile function and simulations for
the phase-type distribution with initial distribution equal to
\code{initDist} and subtransition/subintensity matrix equal to
\code{P.mat}/\code{T.mat}.
}
\details{
In the discrete case, the phase-type distribution has density
\deqn{f(x) = initDist (P.mat ^ (x-1))t + (x=1)(1-sum(initDist)), }
for integers \eqn{x \ge 1}, where \code{initDist} is the initial distribution, \code{P.mat} is the subtransition
probability matrix and \code{t = (I-P)e}. Furthermore, the distribution function
is given by
\deqn{F(x) = 1- initDist (P.mat ^ x) e + (x \ge 1)(1-sum(initDist))}. 
If the quantile \eqn{x} is a
real number, the function will round the number down in order to obtain a
natural number.
In the continuous case, the phase-type distribution has density
\deqn{f(x) = initDist expm(x T.mat) t, for x \ge 0 }
where \code{initDist} is the initial distribution, \code{T.mat} is the subintensity
rate matrix and \code{t = -Te}. Furthermore, the distribution function
is given by
\deqn{F(x) = 1- initDist expm(x T.mat) e, for x \ge 0.}
}
\examples{

## We reproduce Figure 3.4 in John Wakeley (2009): 
## "Coalescent Theory: An Introduction", 
## Roberts and Company Publishers, Colorado.

x.vec <- seq(0,4, by=0.1)
dist <- matrix(nrow = 6, ncol = length(x.vec))
for(x in x.vec){
 
 dist[2,which(x.vec ==x)] <- dphasetype(T_MRCA$n5,x)
 dist[3,which(x.vec ==x)] <- dphasetype(T_MRCA$n10,x)
 dist[4,which(x.vec ==x)] <- dphasetype(T_MRCA$n20,x)
 dist[5,which(x.vec ==x)] <- dphasetype(T_MRCA$n50,x)
 dist[6,which(x.vec ==x)] <- dphasetype(T_MRCA$n100,x)
}

## For n=2, the initial distribution is initDist = 1 and the transition probability
## matrix is T.mat = -1, hence the distribution is given by
dist[1,] <- exp(-x.vec)

plot(x.vec, dist[1,], type = "l", main = expression(paste("The distribution of ", T["MRCA"],
     " for n=2,5,10,20,50,100")), cex.main = 0.9, xlab = "x", ylab = expression(f[T[MRCA]](x)),
     xlim = c(0,4), ylim = c(0,1), frame.plot = F)
points(x.vec, dist[2,], type = "l")
points(x.vec, dist[3,], type = "l")
points(x.vec, dist[4,], type = "l")
points(x.vec, dist[5,], type = "l")
points(x.vec, dist[6,], type = "l")


x.vec <- seq(0,15, by=0.1)
dist <- matrix(,nrow = 6, ncol = length(x.vec))
for(x in x.vec){

 dist[2,which(x.vec ==x)] <- dphasetype(T_Total$n5,x)
 dist[3,which(x.vec ==x)] <- dphasetype(T_Total$n10,x)
 dist[4,which(x.vec ==x)] <- dphasetype(T_Total$n20,x)
 dist[5,which(x.vec ==x)] <- dphasetype(T_Total$n50,x)
 dist[6,which(x.vec ==x)] <- dphasetype(T_Total$n100,x)
}

## For n=2, the initial distribution is initDist = 1 and the transition probability
## matrix is T.mat = -1/2, hence the distribution is given by
dist[1,] <- exp(-x.vec/2)/2

plot(x.vec, dist[1,], type = "l", main = expression(paste("The distribution of ", T["Total"],
    " for n=2,5,10,20,50,100")), cex.main = 0.9, xlab = "x", ylab = expression(f[T[Total]](x)),
    xlim = c(0,15), ylim = c(0,0.5), frame.plot = F)
points(x.vec, dist[2,], type = "l")
points(x.vec, dist[3,], type = "l")
points(x.vec, dist[4,], type = "l")
points(x.vec, dist[5,], type = "l")
points(x.vec, dist[6,], type = "l")

## Simulating ten total branch lengths 
## for a sample of size 5
rphasetype(T_Total$n5, n=10)

}
\seealso{
\code{\link{dnorm}}, \code{\link{dt}},
\code{\link{dexp}}.
}
