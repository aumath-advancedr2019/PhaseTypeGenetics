% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DocumentationMinMax.R
\name{minima}
\alias{minima}
\alias{maxima}
\title{Minima and maxima of phase-type distributions}
\source{
Mogens Bladt and Bo Friis Nielsen (2017):
\emph{ Matrix-Exponential Distributions in Applied Probability}.
Probability Theory and Stochastic Modelling (Springer), Volume 81.
}
\usage{
minima(object1, object2)

maxima(object1, object2)
}
\arguments{
\item{object1, object2}{two objects of class \code{discphasetype}
or \code{contphasetype} for which the maximum or minimum should be computed.}
}
\value{
The function \code{minima} returns an object of type \code{discphasetype}
or \code{contphasetype} (depending on the input) holding the phase-type representation
of the minimum of the input objects, while \code{maxima} returns an object of type \code{discphasetype}
or \code{contphasetype} that holds the phase-type representation
of the maximum of the input objects.
}
\description{
Computes the minima and maxima of two independent discrete or continuous
phase-type distributed variables with initial distributions
\code{initDist1} and \code{initDist2} as well as sub-transition/sub-intensity
matrices equal to \code{P_Mat1}/\code{T_Mat1} and  \code{P_Mat2}/\code{T_Mat2}.
}
\details{
In the discrete case, the minimum and maximum of two phase-type distributed
variables \eqn{tau1 ~ DPH_p(\alpha,S)} and \eqn{tau2 ~ DPH_q(\beta,T)} are defined
as follows
\deqn{min(tau1, tau2) ~ DPH_{pq}( kronecker(\alpha,\beta), kronecker(S,T) ),}
and
\deqn{max(tau1, tau2) ~ DPH_{pq + p + q}( c(kronecker(\alpha,\beta),0_vec), K ),}
where
\code{0_vec} is a vector of length \eqn{p+q} with zero in each entry and
\deqn{K= rbind( cbind(kronecker(S,T), kronecker(S,t),kronecker(s,T) ),
          cbind(matrix(0, ncol = p*q, nrow = p), S , matrix(0, ncol = q, nrow = p)),
          cbind(matrix(0, ncol = p*q, nrow = q), matrix(0, ncol = p, nrow = q), T)).}

In the continuous case, the minima and maxima of two phase-type distributed
variables \eqn{X ~ PH_p(\alpha,S)} and \eqn{Y ~ PH_q(\beta,T)} is
given in the following way
\deqn{min(X, Y) ~ PH( kronecker(\alpha,\beta), kronecker(S,T) ),}
and
\deqn{max(X, Y) ~ PH( c(kronecker(alpha,beta),0_vec), K ),}
where
\code{0_vec} is a vector of length \eqn{p+q} with zero in each entry and
\deqn{K= rbind( cbind(kronecker(S,T), kronecker(I,t),kronecker(s,I) ),
          cbind(matrix(0, ncol = p*q, nrow = p), S , matrix(0, ncol = q, nrow = p)),
          cbind(matrix(0, ncol = p*q, nrow = q), matrix(0, ncol = p, nrow = q), T)).}
}
\examples{

## Two representations of the total branch length
## are given by
T_Total1 <- matrix(c(-1.5, 1.5, 0,
                     0, -1, 1,
                     0, 0, -0.5), nrow = 3, byrow = TRUE)

T_Total2 <- matrix(c(-1.5, 1.5, 0, 0,
                     0, -1, 2/3, 1/3,
                     0, 0, -0.5, 0,
                     0, 0, 0, -0.5), nrow = 4, byrow = TRUE)

## Defining two objects of type "contphasetype".
T_Total1 <- contphasetype(initDist = c(1,0,0), T_Total1)
T_Total2 <- contphasetype(initDist = c(1,0,0,0), T_Total2)

## Computing the minimum and maximum
minima(T_Total1, T_Total2)
maxima(T_Total1, T_Total2)

}
\seealso{
\code{\link{min}} or \code{\link{max}}.
}
